{"version":3,"sources":["components/TimeList.js","components/StopWatch.js","components/Timer.js","App.js","serviceWorker.js","index.js"],"names":["TimeList","times","clearList","isListEmpty","className","map","time","key","uuidv4","type","onClick","style","backgroundColor","pointerEvents","cursor","StopWatch","useState","minute","setMinute","second","setSecond","splitSecond","setSplitSecond","timer","setTimer","setTimes","setIsListEmpty","title","setTitle","intervalRef","useRef","stopTimer","clearInterval","current","useEffect","prevMinute","prevHour","document","setInterval","prevSecond","e","preventDefault","newTime","updatedTimes","alert","Timer","hour","setHour","stopCountDown","useCallback","resetCountDown","getElementById","value","getElementsByClassName","play","id","placeholder","onChange","target","src","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eebf4a98.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction TimeList({ times, clearList, isListEmpty }) {\r\n  return (\r\n    <div className=\"list\">\r\n      <h1 className=\"list-title title\">Time List</h1>\r\n      <ul className=\"list-ul\">\r\n        {times.map((time) => {\r\n          return (\r\n            <li className=\"list-li\" key={uuidv4()}>\r\n              {time}\r\n            </li>\r\n          );\r\n        })}\r\n        <div className=\"list-button-wrapper\">\r\n          <button\r\n            className=\"list-button button\"\r\n            type=\"button\"\r\n            onClick={clearList}\r\n            style={\r\n              isListEmpty\r\n                ? {\r\n                    backgroundColor: \"#dddddd\",\r\n                    pointerEvents: \"none\",\r\n                  }\r\n                : { backgroundColor: \"red\", cursor: \"pointer\" }\r\n            }\r\n          >\r\n            Clear List\r\n          </button>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeList;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport TimeList from \"./TimeList\";\r\n\r\nfunction StopWatch() {\r\n  const [minute, setMinute] = useState(0);\r\n  const [second, setSecond] = useState(0);\r\n  const [splitSecond, setSplitSecond] = useState(0);\r\n  const [timer, setTimer] = useState(false);\r\n  const [times, setTimes] = useState([]);\r\n  const [isListEmpty, setIsListEmpty] = useState(true);\r\n  const [title, setTitle] = useState(false);\r\n\r\n  const intervalRef = useRef();\r\n\r\n  const startTimer = () => {\r\n    intervalRef.current = setInterval(() => {\r\n      setTitle(true);\r\n      setTimer(true);\r\n      setSplitSecond((prevSecond) => prevSecond + 1);\r\n    }, 16.6);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setTimer(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setSplitSecond(0);\r\n    setSecond(0);\r\n    setMinute(0);\r\n    stopTimer();\r\n    setTitle(false);\r\n  };\r\n\r\n  const addTime = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTime = [minute, \" : \", second, \" : \", splitSecond];\r\n\r\n    const updatedTimes = [...times, newTime];\r\n    if (splitSecond === 0 && second === 0 && minute === 0) {\r\n      alert(\"Start the stopwatch first!\");\r\n    } else {\r\n      setTimes(updatedTimes);\r\n      setIsListEmpty(false);\r\n    }\r\n  };\r\n\r\n  const clearlist = () => {\r\n    setTimes([]);\r\n    setIsListEmpty(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (splitSecond === 60) {\r\n      setSecond((prevMinute) => prevMinute + 1);\r\n      setSplitSecond(0);\r\n    }\r\n    if (second === 60) {\r\n      setMinute((prevHour) => prevHour + 1);\r\n      setSecond(0);\r\n      setSplitSecond(0);\r\n    }\r\n    if (title) {\r\n      document.title = `${minute} : ${second} : ${splitSecond}`;\r\n    } else {\r\n      document.title = \"Timer App\";\r\n    }\r\n  }, [splitSecond, second, minute, title]);\r\n  return (\r\n    <div className=\"stopwatch-container\">\r\n      <div>\r\n        <div className=\"time-container\">\r\n          <div className=\"minute\">{minute}</div>\r\n          <div className=\"colon\">:</div>\r\n          <div className=\"second\">{second}</div>\r\n          <div className=\"colon\">:</div>\r\n          <div className=\"split-second\">{splitSecond}</div>\r\n        </div>\r\n        <div className=\"stopwatch-button button\">\r\n          <button\r\n            className=\"start-stop-button button\"\r\n            onClick={!timer ? startTimer : stopTimer}\r\n            style={\r\n              !timer\r\n                ? { backgroundColor: \"#32CD32\" }\r\n                : { backgroundColor: \"#DC143C\" }\r\n            }\r\n          >\r\n            {!timer ? \"Start\" : \"Stop\"}\r\n          </button>\r\n          <button className=\"reset-button button\" onClick={resetTimer}>\r\n            Reset\r\n          </button>\r\n          <button\r\n            className=\"lap-button button\"\r\n            onClick={addTime}\r\n            style={\r\n              !timer\r\n                ? { backgroundColor: \"#ff8c00\" }\r\n                : { backgroundColor: \"blue\" }\r\n            }\r\n          >\r\n            Lap\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"time-list\">\r\n        <TimeList\r\n          isListEmpty={isListEmpty}\r\n          times={times}\r\n          clearList={clearlist}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StopWatch;\r\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\n\r\nfunction Timer() {\r\n  const [hour, setHour] = useState(0);\r\n  const [minute, setMinute] = useState(0);\r\n  const [second, setSecond] = useState(0);\r\n  const [timer, setTimer] = useState(false);\r\n  const [title, setTitle] = useState(false);\r\n\r\n  const handleChangeHour = (e) => {\r\n    if (e.target.value > 99) {\r\n      alert(\"Enter an hour less then 100\");\r\n    } else if (e.target.value === \"\") {\r\n      setHour(hour);\r\n    } else {\r\n      setHour(e.target.value);\r\n    }\r\n  };\r\n  const handleChangeMinute = (e) => {\r\n    if (e.target.value > 59) {\r\n      alert(\"Enter a minute less then 60\");\r\n    } else if (e.target.value === \"\") {\r\n      setMinute(minute);\r\n    } else {\r\n      setMinute(e.target.value);\r\n    }\r\n  };\r\n  const handleChangeSecond = (e) => {\r\n    if (e.target.value > 59) {\r\n      alert(\"Enter a second less then 60\");\r\n    } else if (e.target.value === \"\") {\r\n      setSecond(second);\r\n    } else {\r\n      setSecond(e.target.value);\r\n    }\r\n  };\r\n\r\n  const intervalRef = useRef();\r\n\r\n  const startCountDown = () => {\r\n    intervalRef.current = setInterval(() => {\r\n      setTitle(true);\r\n      setTimer(true);\r\n      setSecond((prevSecond) => prevSecond - 1);\r\n    }, 1000);\r\n  };\r\n\r\n  const stopCountDown = useCallback(() => {\r\n    clearInterval(intervalRef.current);\r\n    setTimer(false);\r\n  }, [intervalRef]);\r\n\r\n  const resetCountDown = useCallback(() => {\r\n    setTitle(false);\r\n    setHour(0);\r\n    setMinute(0);\r\n    setSecond(0);\r\n    stopCountDown();\r\n    document.getElementById(\"hour-input\").value = \"\";\r\n    document.getElementById(\"minute-input\").value = \"\";\r\n    document.getElementById(\"second-input\").value = \"\";\r\n  }, [stopCountDown]);\r\n\r\n  const alarm = () => {\r\n    const myAudio = document.getElementsByClassName(\"timer-audio\")[0];\r\n    myAudio.play();\r\n  };\r\n  useEffect(() => {\r\n    if (second < 0) {\r\n      setSecond(59);\r\n      setMinute((prevMinute) => prevMinute - 1);\r\n    } else if (minute < 0 && hour !== 0) {\r\n      setMinute(59);\r\n      setHour((prevHour) => prevHour - 1);\r\n    } else if (second < 0 && minute < 0 && hour !== 0) {\r\n      setSecond(59);\r\n      setMinute(59);\r\n      setHour((prevHour) => prevHour - 1);\r\n    }\r\n    if (hour === 0 && minute === 0 && second < 0) {\r\n      alarm();\r\n      resetCountDown();\r\n    }\r\n    if (title) {\r\n      document.title = `${hour} : ${minute} : ${second}`;\r\n    } else {\r\n      document.title = \"Timer App\";\r\n    }\r\n  }, [second, minute, hour, resetCountDown, title]);\r\n  return (\r\n    <div>\r\n      <div className=\"timer-time-container\">\r\n        <div className=\"timer-hour\">{hour}</div>\r\n        <div className=\"colon\">:</div>\r\n        <div className=\"timer-minute\">{minute}</div>\r\n        <div className=\"colon\">:</div>\r\n        <div className=\"timer-second\">{second}</div>\r\n      </div>\r\n      <div className=\"timer-info\">\r\n        <div className=\"hour-info\">Hour</div>\r\n        <div className=\"minute-info\">Minute</div>\r\n        <div className=\"second-info\">Second</div>\r\n      </div>\r\n      <div className=\"timer-input\">\r\n        <div className=\"hour-input\">\r\n          <input\r\n            id=\"hour-input\"\r\n            type=\"text\"\r\n            placeholder=\"Hour..\"\r\n            onChange={handleChangeHour}\r\n          />\r\n        </div>\r\n        <div className=\"minute-input\">\r\n          <input\r\n            id=\"minute-input\"\r\n            type=\"text\"\r\n            placeholder=\"Minute..\"\r\n            onChange={handleChangeMinute}\r\n          />\r\n        </div>\r\n        <div className=\"second-input\">\r\n          <input\r\n            id=\"second-input\"\r\n            type=\"text\"\r\n            placeholder=\"Second..\"\r\n            onChange={handleChangeSecond}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"timer-button button\">\r\n        <button\r\n          className=\"start-stop-button button\"\r\n          onClick={!timer ? startCountDown : stopCountDown}\r\n          style={\r\n            !timer\r\n              ? { backgroundColor: \"#32CD32\" }\r\n              : { backgroundColor: \"#DC143C\" }\r\n          }\r\n        >\r\n          {!timer ? \"Start\" : \"Stop\"}\r\n        </button>\r\n        <button className=\"reset-button button\" onClick={resetCountDown}>\r\n          Reset\r\n        </button>\r\n        <audio className=\"timer-audio\">\r\n          <source src=\"https://api.coderrocketfuel.com/assets/pomodoro-times-up.mp3\"></source>\r\n        </audio>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport StopWatch from \"./components/StopWatch\";\nimport Timer from \"./components/Timer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"first-title title\">Stopwatch</h1>\n      <div className=\"stopwatch\">\n        <StopWatch />\n      </div>\n      <div className=\"timer\">\n        <h1 className=\"second-title title\">Timer</h1>\n        <Timer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}